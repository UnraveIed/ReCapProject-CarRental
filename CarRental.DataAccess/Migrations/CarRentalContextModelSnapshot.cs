// <auto-generated />
using System;
using CarRental.DataAccess.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRental.DataAccess.Migrations
{
    [DbContext(typeof(CarRentalContext))]
    partial class CarRentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarRental.Entities.Concrete.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4863),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4864),
                            Name = "Mercedes",
                            Note = "Mercedes Markası"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4867),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4868),
                            Name = "BMV",
                            Note = "BMV Markası"
                        },
                        new
                        {
                            Id = 3,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4874),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4874),
                            Name = "Lamborghini",
                            Note = "Lamborghini Markası"
                        },
                        new
                        {
                            Id = 4,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4877),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4877),
                            Name = "Ferrari",
                            Note = "Ferrari Markası"
                        },
                        new
                        {
                            Id = 5,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4879),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4880),
                            Name = "Opel",
                            Note = "Opel Markası"
                        },
                        new
                        {
                            Id = 6,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4882),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4882),
                            Name = "Peugeot",
                            Note = "Peugeot Markası"
                        },
                        new
                        {
                            Id = 7,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4884),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4885),
                            Name = "Koenigsegg",
                            Note = "Koenigsegg Markası"
                        },
                        new
                        {
                            Id = 8,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4892),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4893),
                            Name = "Aston Martin",
                            Note = "Aston Martin Markası"
                        },
                        new
                        {
                            Id = 9,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4895),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4895),
                            Name = "Porsche",
                            Note = "Porsche Markası"
                        },
                        new
                        {
                            Id = 10,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4897),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4898),
                            Name = "McLaren",
                            Note = "McLaren Markası"
                        },
                        new
                        {
                            Id = 11,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4900),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(4900),
                            Name = "Ford",
                            Note = "Ford Markası"
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DailyPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<short>("ModelYear")
                        .HasColumnType("smallint");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("ColorId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            ColorId = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8566),
                            DailyPrice = 950000.00m,
                            Description = "Iyi bir model 1",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2019,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8567),
                            Note = "1. Araba"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            ColorId = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8570),
                            DailyPrice = 850000.00m,
                            Description = "Iyi bir model 2",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2017,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8571),
                            Note = "2. Araba"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            ColorId = 3,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8574),
                            DailyPrice = 1000000.00m,
                            Description = "Iyi bir model 3",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2021,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8574),
                            Note = "3. Araba"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            ColorId = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8578),
                            DailyPrice = 980000.00m,
                            Description = "Iyi bir model 4",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2020,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8579),
                            Note = "4. Araba"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 5,
                            ColorId = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8581),
                            DailyPrice = 150000.00m,
                            Description = "Iyi bir model 5",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2014,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8582),
                            Note = "5. Araba"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 6,
                            ColorId = 3,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8585),
                            DailyPrice = 250000.00m,
                            Description = "Iyi bir model 6",
                            IsActive = true,
                            IsDeleted = false,
                            ModelYear = (short)2021,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(8585),
                            Note = "6. Araba"
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.CarImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("CarImages");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(5914),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(5915),
                            Name = "Sarı",
                            Note = "Sarı Rengi"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(5917),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(5918),
                            Name = "Kırmızı",
                            Note = "Kırmızı Rengi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(5920),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(5921),
                            Name = "Mavi",
                            Note = "Mavi Rengi"
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "AE Yazılım",
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 803, DateTimeKind.Local).AddTicks(259),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 803, DateTimeKind.Local).AddTicks(260),
                            Note = "1. Musteri",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Selçuk Üniversitesi",
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 803, DateTimeKind.Local).AddTicks(263),
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 803, DateTimeKind.Local).AddTicks(263),
                            Note = "2. Musteri",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 5,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 803, DateTimeKind.Local).AddTicks(2491),
                            CustomerId = 1,
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 803, DateTimeKind.Local).AddTicks(2492),
                            Note = "Ilk kira",
                            RentDate = new DateTime(2022, 12, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            ReturnDate = new DateTime(2022, 12, 26, 0, 0, 0, 0, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            CarId = 6,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 803, DateTimeKind.Local).AddTicks(2496),
                            CustomerId = 2,
                            IsActive = true,
                            IsDeleted = false,
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 803, DateTimeKind.Local).AddTicks(2496),
                            Note = "2. kira",
                            RentDate = new DateTime(2022, 12, 21, 0, 0, 0, 0, DateTimeKind.Local),
                            ReturnDate = new DateTime(2022, 12, 23, 0, 0, 0, 0, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(9512),
                            Email = "batu@inal.com",
                            FirstName = "Batuhan",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "İnal",
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(9513),
                            Note = "User data seed",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(9516),
                            Email = "samet@inal.com",
                            FirstName = "Samet",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "İnal",
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(9517),
                            Note = "User data seed",
                            Password = "12345"
                        },
                        new
                        {
                            Id = 3,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(9519),
                            Email = "Ilknur@inal.com",
                            FirstName = "Ilknur",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "İnal",
                            ModifiedByName = "InitialCreate",
                            ModifiedDate = new DateTime(2022, 12, 21, 16, 28, 2, 802, DateTimeKind.Local).AddTicks(9520),
                            Note = "User data seed",
                            Password = "12345"
                        });
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Car", b =>
                {
                    b.HasOne("CarRental.Entities.Concrete.Brand", "Brand")
                        .WithMany("Cars")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Entities.Concrete.Color", "Color")
                        .WithMany("Cars")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.CarImage", b =>
                {
                    b.HasOne("CarRental.Entities.Concrete.Car", "Car")
                        .WithMany("Cars")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Customer", b =>
                {
                    b.HasOne("CarRental.Entities.Concrete.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Rental", b =>
                {
                    b.HasOne("CarRental.Entities.Concrete.Car", "Car")
                        .WithMany("Rentals")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Entities.Concrete.Customer", "Customer")
                        .WithMany("Rentals")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Brand", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Car", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Color", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("CarRental.Entities.Concrete.Customer", b =>
                {
                    b.Navigation("Rentals");
                });
#pragma warning restore 612, 618
        }
    }
}
